{{- $envOverrides := index .Values (tpl (default .Chart.Name .Values.name) .) -}}
  {{- $baseValues := .Values | deepCopy -}}
  {{- $values := dict "Values" (mustMergeOverwrite $baseValues $envOverrides) -}}
  {{- with mustMergeOverwrite . $values -}}
  {{- if .Values.persistence.enabled }}
apiVersion: v1
kind: "PersistentVolume"
metadata:
  name: {{ .Chart.Name }}-data
  labels:
    app: {{ .Values.labels.app }}
    group: {{ .Values.labels.group }}
  {{- if $.Values.persistence.aws }}
    failure-domain.beta.kubernetes.io/zone: {{ $.Values.persistence.aws.zone }}
    topology.kubernetes.io/zone: {{ $.Values.persistence.aws.zone }}
  {{- end }}
spec:
  capacity:
    storage: {{ .Values.persistence.dataDirSize | quote }}
  accessModes:
    - {{ .Values.persistence.accessMode | quote }}
  persistentVolumeReclaimPolicy: Recycle
  claimRef:
  {{- if .Values.global.namespace }}
    namespace: {{ .Values.global.namespace }}
  {{- else }}
    namespace: {{ .Values.namespace }}
  {{- end }}
    name: {{ .Chart.Name }}-data
  {{- if .Values.persistence.aws }}
  awsElasticBlockStore:
    volumeID: {{ $.Values.persistence.aws.volumeId }}
    fsType: ext4
  {{- end }}
  {{- if $.Values.persistence.azure }}
  azureDisk:
    cachingMode: ReadWrite
    diskName: {{ $.Values.persistence.azure.diskName }}
    diskURI: {{ $.Values.persistence.azure.diskUri }}
    kind: Managed
    fsType: ext4
  {{- end }}
  {{- if $.Values.persistence.openstack }}
  cinder:
    fsType: "ext4"
    volumeID: {{ $.Values.persistence.openstack }}
  {{- end }}
  {{- if $.Values.persistence.iscsi }}
  iscsi:
    targetPortal: {{ $.Values.persistence.iscsi.targetPortal }}
    iqn: {{ $.Values.persistence.iscsi.iqn }}
    lun: 0
    fsType: 'ext4'
    readOnly: true
  {{- end }}
---
{{- end }}
{{- end }}